local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Wait for PlayerScripts and FlyScript to exist
local playerScripts = localPlayer:WaitForChild("PlayerScripts")
local flyScript = playerScripts:WaitForChild("FlyScript")

-- Enable FlyScript and set gamemode
flyScript.Enabled = true
localPlayer:SetAttribute("Gamemode", "Creative")

local s_RunService_0 = game:GetService("RunService")
local s_UserInputService_0 = game:GetService("UserInputService")
local s_ReplicatedStorage_0 = game:GetService("ReplicatedStorage")
local s_Players_0 = game:GetService("Players")

local l_LocalPlayer_0 = s_Players_0.LocalPlayer
local v_u_1 = l_LocalPlayer_0:WaitForChild("PlayerGui"):WaitForChild("PlantHover_UI")
local v_u_2 = v_u_1:WaitForChild("Frame")
local v_u_3 = v_u_2:WaitForChild("PlantName")
local v_u_4 = v_u_2:WaitForChild("PlantInfo")
local v_u_5 = v_u_2:WaitForChild("PlantValue")
local v_u_6 = v_u_2:WaitForChild("PlantMuts")

local v7 = require(s_ReplicatedStorage_0.Modules.CreateTagHandler)
local v_u_8 = require(s_ReplicatedStorage_0.Data.GrowableData)
local v_u_9 = require(s_ReplicatedStorage_0.Modules.NumberUtil)
local v10 = require(s_ReplicatedStorage_0.Modules.Trove)
local v11 = require(s_ReplicatedStorage_0.Modules.Remotes)
local v_u_12 = require(s_ReplicatedStorage_0.Data.SeedData)
local v_u_13 = require(s_ReplicatedStorage_0.Item_Module)
local v_u_14 = require(s_ReplicatedStorage_0.Modules.CalculatePlantValue)
local v_u_15 = require(s_ReplicatedStorage_0.Comma_Module)
local v_u_16 = require(s_ReplicatedStorage_0.Modules.MutationHandler):GetMutations()
local v_u_17 = require(s_ReplicatedStorage_0.Modules.GetMouseToWorld)

local l_CurrentCamera_0 = workspace.CurrentCamera
workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
    workspace.CurrentCamera = l_CurrentCamera_0
end)

local v_u_18 = 0
local v_u_19 = nil
local v_u_20 = {}
local v_u_21 = {}
local v_u_22 = {}
local v_u_23 = workspace:GetAttribute("CurrentWeatherEvent") or "Default"
local v_u_24 = v_u_8:GetDataForWeather(v_u_23)

workspace:GetAttributeChangedSignal("CurrentWeatherEvent"):Connect(function()
    v_u_23 = workspace:GetAttribute("CurrentWeatherEvent") or "Default"
    v_u_24 = v_u_8:GetDataForWeather(v_u_23)
end)

local v_u_25 = RaycastParams.new()
v_u_25.FilterDescendantsInstances = v_u_20
v_u_25.FilterType = Enum.RaycastFilterType.Include

-- Enhanced function to check if object is a fruit
local function f_IsFruit(p_object)
    return p_object:FindFirstAncestor("Fruits") ~= nil
end

-- Enhanced function to get plant/fruit name
local function f_GetDisplayName(p_object)
    if f_IsFruit(p_object) then
        local parent = p_object.Parent
        if parent and parent.Name ~= "Fruits" then
            return parent.Name
        else
            return p_object.Name
        end
    else
        return p_object.Name
    end
end

v7({
    ["Tag"] = "Growable",
    ["OnInstanceAdded"] = function(p27)
        if p27:IsDescendantOf(workspace) then
            table.insert(v_u_20, p27)
            v_u_25:AddToFilter(p27)
        end
    end,
    ["OnInstanceRemoved"] = function(p28)
        local v29 = table.find(v_u_20, p28)
        if v29 then
            table.remove(v_u_20, v29)
            v_u_25.FilterDescendantsInstances = v_u_20
            v_u_21[p28] = nil
            v_u_22[p28] = nil
        end
    end
})

local v_u_30 = false
local v_u_31 = v10.new()

local function f_UpdateTimeLeft(p32)
    if p32 then
        local v33 = v_u_8:GetDataForPlant(p32)
        if v33 then
            local v34 = p32:WaitForChild("Grow", 1)
            local v35
            if v34 then
                v35 = v34:WaitForChild("Age", 1)
            end
            if v35 then
                local l_GrowTickTime_0 = v33.GrowTickTime
                v_u_22[p32] = math.ceil(((p32:GetAttribute("MaxAge") or 1) - v35.Value) / v33.GrowRate) * (Random.new(p32.Item_Seed.Value):NextNumber() * (l_GrowTickTime_0.Max - l_GrowTickTime_0.Min) + l_GrowTickTime_0.Min)
                v_u_21[p32] = nil
            end
        end
    end
end

v11.Plant.Update.listen(function(p36)
    if v_u_30 then
        pcall(f_UpdateTimeLeft, p36)
    end
end)

local v_u_47 = false

local function f_UpdateABGrowTimer()
    v_u_47 = l_LocalPlayer_0:GetAttribute("AB_GrowTimer")
    if v_u_47 then
        if not v_u_30 then
            v_u_30 = true
            local v_u_48 = 0
            v_u_31:Add(s_RunService_0.PostSimulation:Connect(function(p49)
                v_u_48 = v_u_48 + p49
                if v_u_48 >= 0.2 then
                    local v50 = v_u_48
                    v_u_48 = 0
                    for _, v51 in v_u_20 do
                        local v52 = v_u_22[v51]
                        if v52 then
                            if v52 > 0 then
                                local v53 = v_u_22
                                v53[v51] = v53[v51] - v50 * ((v51:GetAttribute("GrowRateMulti") or 1) * v_u_24.GrowRateMulti)
                            end
                        else
                            local v54 = v51:FindFirstChild("Grow")
                            if v54 then
                                local v55 = v54:FindFirstChild("Age")
                                if v55 and v51:GetAttribute("MaxAge") then
                                    local l_Value_1 = v55.Value
                                    local v56 = v_u_21[v51]
                                    if v56 ~= l_Value_1 or l_Value_1 == 0 then
                                        if v56 and not v_u_22[v51] then
                                            f_UpdateTimeLeft(v51)
                                        else
                                            v_u_21[v51] = l_Value_1
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end))
        end
    elseif v_u_30 then
        v_u_30 = false
        for _, v57 in v_u_20 do
            v_u_21[v57] = nil
            v_u_22[v57] = nil
        end
        v_u_31:Clean()
    end
end

task.spawn(f_UpdateABGrowTimer)
l_LocalPlayer_0:GetAttributeChangedSignal("AB_GrowTimer"):Connect(f_UpdateABGrowTimer)

local v_u_58 = 0
local v_u_59 = false

local function f_FindPlantModel(p60)
    while p60 and p60 ~= workspace do
        if p60:IsA("Model") and p60:HasTag("Growable") then
            return p60
        end
        p60 = p60:FindFirstAncestorWhichIsA("Model")
    end
    return nil
end

local v_u_61 = {}

local function StartRainbowTween(p_u_62, p_u_63, p_u_64)
    if v_u_61[p_u_62] then
        v_u_61[p_u_62]:Disconnect()
    end
    local v_u_65 = 0
    v_u_61[p_u_62] = s_RunService_0.RenderStepped:Connect(function(p66)
        v_u_65 = (v_u_65 + p66 * 0.2) % 1
        local v67 = Color3.fromHSV(v_u_65, 1, 1)
        p_u_62.Text = p_u_63:gsub("\240\159\140\136", (string.format("<font color=\"#%s\">%s</font>", string.format("#%02X%02X%02X", v67.R * 255, v67.G * 255, v67.B * 255), p_u_64)))
    end)
end

s_RunService_0.PostSimulation:Connect(function(p69)
    local v70 = s_UserInputService_0:GetMouseLocation()
    v_u_1.Frame.Position = UDim2.new(0.01, v70.X, 0, v70.Y)
    v_u_58 = v_u_58 + p69
    if v_u_58 < 0.1 then
        return
    else
        v_u_58 = 0
        local v71 = v_u_17(v_u_25, 1000)
        local v72 = nil
        if v71 and v71.Instance then
            local l_Instance_0 = v71.Instance
            local v73 = f_FindPlantModel(l_Instance_0)
            -- Modified condition: Accept both inspected plants AND fruits
            if v73 and (v73:GetAttribute("Inspected") or f_IsFruit(l_Instance_0)) then
                v72 = v73
            end
        end
        if v72 and v72:GetAttribute("IsOutlined") then
            v72 = nil
        end
        if v72 then
            local v74 = v72:GetAttribute("Inspected")
            local isFruit = f_IsFruit(v72)
            if v72 == v_u_19 then
                local v75 = v72:GetAttribute("MaxAge")
                local v76 = v72:FindFirstChild("Grow")
                if v76 then
                    local v77 = v76:FindFirstChild("Age")
                    if v75 and (v76 and v77) then
                        v_u_18 = v_u_18 + (math.clamp(v77.Value / v75 * 100, 0, 100) - v_u_18) * math.clamp(p69 * 10, 0, 1)
                        if v_u_18 ~= v_u_18 or (v_u_18 == (1 / 0) or v_u_18 == (-1 / 0)) then
                            v_u_18 = 0
                        end
                        if v_u_47 then
                            local v78 = v_u_22[v_u_19] or 0
                            local v79 = v_u_4
                            local v80
                            if v78 <= 0 then
                                v80 = ""
                            elseif v78 < 60 then
                                v80 = string.format("%.1fs", v78)
                            else
                                v80 = v_u_9.compactFormat(v78)
                            end
                            v79.Text = v80
                        else
                            if isFruit then
                                v_u_4.Text = string.format("%.0f%% Ripened", v_u_18)
                            else
                                v_u_4.Text = string.format("%.0f%% Grown", v_u_18)
                            end
                        end
                    end
                    v_u_4.Visible = v_u_4.Text ~= ""
                end
            else
                v_u_19 = v72
                local v81 = v_u_19:GetAttribute("MaxAge")
                local v82 = v_u_19.Grow:FindFirstChild("Age")
                if v81 and v82 then
                    local v83 = math.clamp(v82.Value / v81 * 100, 0, 100)
                    v_u_18 = v83
                    for _, v84 in pairs(v_u_61) do
                        v84:Disconnect()
                    end
                    table.clear(v_u_61)
                    local l_Name_0 = f_GetDisplayName(v_u_19)
                    local v85 = v_u_12[v_u_19.Name] -- Use original name for data lookup
                    if v85 then
                        v85 = v85.SeedRarity
                    end
                    local v86
                    if v85 then
                        v86 = v_u_13.Return_Rarity_Data(v85)
                    end
                    if v85 == "Prismatic" then
                        v_u_3.Text = "\240\159\140\136"
                        StartRainbowTween(v_u_3, "\240\159\140\136", l_Name_0)
                    elseif v86 then
                        local v92 = v86[2]
                        v_u_3.Text = string.format("<font color=\"%s\">%s</font>", string.format("#%02X%02X%02X", v92.R * 255, v92.G * 255, v92.B * 255), l_Name_0)
                    else
                        v_u_3.Text = l_Name_0
                    end
                    if v83 >= 100 then
                        if isFruit then
                            v_u_4.Text = "Ready to Harvest"
                        else
                            v_u_4.Text = ""
                        end
                    elseif v_u_47 then
                        local v93 = v_u_22[v_u_19] or 0
                        local v94 = v_u_4
                        local v95
                        if v93 <= 0 then
                            v95 = ""
                        elseif v93 < 60 then
                            v95 = string.format("%.1fs", v93)
                        else
                            v95 = v_u_9.compactFormat(v93)
                        end
                        v94.Text = v95
                    else
                        if isFruit then
                            v_u_4.Text = string.format("%.0f%% Ripened", v_u_18)
                        else
                            v_u_4.Text = string.format("%.0f%% Grown", v_u_18)
                        end
                    end
                    v_u_4.Visible = v_u_4.Text ~= ""
                    if v74 or isFruit then
                        v_u_5.Text = v_u_15.Comma((v_u_14(v72))) .. "¢"
                    else
                        v_u_5.Text = ""
                    end
                    v_u_5.Visible = v_u_5.Text ~= ""
                    local v96 = nil
                    local v97 = nil
                    local v98 = v72:FindFirstChild("Variant")
                    local v99
                    if v98 and v98:IsA("StringValue") then
                        v99 = v98.Value
                        if v99 == "" or v99 == "Normal" then
                            v99 = v96
                        elseif v99 == "Rainbow" then
                            v97 = nil
                        elseif v99 == "Gold" then
                            v97 = "#FFD700"
                        else
                            v97 = "#FFFFFF"
                        end
                    else
                        v99 = v96
                    end
                    local v100 = {}
                    for v101, v102 in pairs(v_u_16) do
                        if v72:GetAttribute(v101) then
                            local v103 = {
                                ["Name"] = v101
                            }
                            local v104
                            if v102.Color then
                                local l_Color_0 = v102.Color
                                v104 = string.format("#%02X%02X%02X", l_Color_0.R * 255, l_Color_0.G * 255, l_Color_0.B * 255) or "#FFFFFF"
                            else
                                v104 = "#FFFFFF"
                            end
                            v103.Color = v104
                            table.insert(v100, v103)
                        end
                    end
                    local v105 = {}
                    if v99 then
                        if v99 == "Rainbow" then
                            table.insert(v105, "\240\159\140\136")
                        else
                            table.insert(v105, string.format("<font color=\"%s\">%s</font>", v97, v99))
                        end
                    end
                    for _, v106 in ipairs(v100) do
                        table.insert(v105, string.format("<font color=\"%s\">%s</font>", v106.Color, v106.Name))
                    end
                    if #v105 > 0 then
                        local v_u_107 = table.concat(v105, " <font color=\"#FFFFFF\">+</font> ")
                        v_u_6.Text = v_u_107
                        if v99 == "Rainbow" then
                            StartRainbowTween(v_u_6, v_u_107, "Rainbow")
                        end
                    else
                        v_u_6.Text = ""
                    end
                    v_u_6.Visible = v_u_6.Text ~= ""
                    if not v_u_59 then
                        v_u_59 = true
                        v_u_2.Show_Val.Value = true
                        v_u_2.Visible = true
                    end
                end
            end
        else
            if v_u_59 then
                v_u_59 = false
                v_u_2.Show_Val.Value = false
                v_u_2.Visible = false
                v_u_19 = nil
                for _, v113 in pairs(v_u_61) do
                    v113:Disconnect()
                end
                table.clear(v_u_61)
            end
            return
        end
    end
end)
